{"version":3,"sources":["helpers/createCubeMap.js","containers/map.js","containers/cell.js","containers/arrowPad.js","containers/scoreBoard.js","containers/cube.js","helpers/copyCube.js","App.js","serviceWorker.js","index.js"],"names":["Arr3D","x","y","z","val","arguments","length","undefined","firArr","i","secArr","j","thirArr","k","push","populateArr3D","count","Xlen","Ylen","Zlen","floorRand","AdjCounts3D","cubeLen","incrAdjArr3D","iList","jList","kList","_i","a","_i2","b","_i3","c","fillCubeFaces","filler","name","faceFiller","value","scale","Math","floor","random","cubeFaceColor","faceColors","func","toString","color","getRandomColor","__webpack_require__","d","__webpack_exports__","Map3D","props","_this","Object","_Users_john_yu_2019_mineSweeper3D_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_john_yu_2019_mineSweeper3D_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_john_yu_2019_mineSweeper3D_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","theCube","state","cubeSize","bombCount","bombVal","cellsClicked","bombsLeft","ratio","rotateX","rotateY","safeCells","_this$state","setState","alert","console","log","arrow","_this$state2","rotateCube","indexOf","includes","_this2","_this$state3","_theCube$x$y$z","flag","recursed","clicked","incCellsClicked","_loop","_loop2","_loop3","setImmediate","click","_theCube$x$y$z2","_this$state4","bombs","spaces","num","_i4","_i5","_i6","selected","_this3","_this$state5","colors","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","className","map","yArr","key","zArr","_cell__WEBPACK_IMPORTED_MODULE_6__","mouseOver","bind","mouseOut","contextMenu","_cube__WEBPACK_IMPORTED_MODULE_9__","_arrowPad__WEBPACK_IMPORTED_MODULE_7__","arrowPad","_scoreBoard__WEBPACK_IMPORTED_MODULE_8__","Component","CubeCell","e","preventDefault","_this$props","_this$props2","_this$props3","_this$props4","cellsClass","classNames","cell","bomb","colorStyle","backgroundColor","id","concat","onClick","handleClick","onContextMenu","handleContextMenu","onMouseOver","handleMouseOver","onMouseLeave","style","ArrowPad","upArrow","leftArrow","rightArrow","downArrow","ScoreBoard","Cube","rotateStyle","transform","item","divStyle","opacity","_createCubeMap__WEBPACK_IMPORTED_MODULE_0__","OCube","direction","newCube","new_k","new_j","App","react_default","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5fd10387.chunk.js","sourcesContent":["// @flow\nexport function Arr3D(x: number, y: number, z: number, val = \"\") {\n  let firArr: Array<Array<Array<number | string>>> = [];\n  for (let i = 0; i < x; i++) {\n    let secArr: Array<Array<number | string>> = [];\n    for (let j = 0; j < y; j++) {\n      let thirArr: Array<number | string> = [];\n      for (let k = 0; k < z; k++) {\n        thirArr.push({ val });\n      }\n      secArr.push(thirArr);\n    }\n    firArr.push(secArr);\n  }\n  return firArr;\n}\nexport function populateArr3D(\n  Arr3D: Array<Array<Array<number | string>>>,\n  val: string | number,\n  count: number\n) {\n  let Xlen = Arr3D.length;\n  let Ylen = Arr3D[0].length;\n  let Zlen = Arr3D[0][0].length;\n  while (count) {\n    let x = floorRand(Xlen);\n    let y = floorRand(Ylen);\n    let z = floorRand(Zlen);\n    if (!Arr3D[x][y][z].val) {\n      Arr3D[x][y][z].val = val;\n      count--;\n    }\n  }\n  return Arr3D;\n}\nexport function AdjCounts3D(\n  Arr3D: Array<Array<Array<number | string>>>,\n  val: string | number\n) {\n  let cubeLen = Arr3D.length;\n  for (let i = 0; i < cubeLen; i++) {\n    for (let j = 0; j < cubeLen; j++) {\n      for (let k = 0; k < cubeLen; k++) {\n        if (Arr3D[i][j][k].val === val) {\n          Arr3D = incrAdjArr3D(Arr3D, val, i, j, k);\n        }\n      }\n    }\n  }\n  return Arr3D;\n}\nfunction incrAdjArr3D(\n  Arr3D: Array<Array<Array<number | string>>>,\n  val: string | number,\n  i: number,\n  j: number,\n  k: number\n) {\n  let iList = [i - 1, i, i + 1];\n  let jList = [j - 1, j, j + 1];\n  let kList = [k - 1, k, k + 1];\n  for (let a of iList) {\n    if (Arr3D[a] !== undefined) {\n      for (let b of jList) {\n        if (Arr3D[a][b] !== undefined) {\n          for (let c of kList) {\n            if (Arr3D[a][b][c] !== undefined && Arr3D[a][b][c].val !== val) {\n              if (typeof Arr3D[a][b][c].val !== \"number\") {\n                Arr3D[a][b][c].val = 0;\n              }\n              Arr3D[a][b][c].val++;\n            }\n          }\n        }\n      }\n    }\n  }\n  return Arr3D;\n}\nexport function fillCubeFaces(\n  Arr3D: Array<Array<Array<number | string>>>,\n  filler, //memoized function\n  name: string\n) {\n  let x = Arr3D.length;\n  let y = Arr3D[0].length;\n  let z = Arr3D[0][0].length;\n  let faceFiller = filler();\n\n  for (let i = 0; i < x; i++) {\n    let value = faceFiller(i);\n    for (let j = 0; j < y; j++) {\n      for (let k = 0; k < z; k++) {\n        Arr3D[i][j][k][name] = value;\n      }\n    }\n  }\n  return Arr3D;\n}\nfunction floorRand(scale: number) {\n  return Math.floor(Math.random() * scale);\n}\nfunction readCubeFace(face) {\n  let vals = 0;\n  for (let i = 0; i < face.length; i++) {\n    for (let j = 0; j < face.length; j++) {\n      if (typeof face[i][j] !== \"number\") vals += 0.00001;\n      else {\n        if (face[i][j] >= 10) {\n          vals += face[i][j];\n          vals -= 10;\n        } else {\n          vals += face[i][j];\n        }\n      }\n    }\n  }\n  return vals;\n}\nfunction getRandomColor() {\n  var letters = \"0123456789ABCDEF\";\n  var color = \"#\";\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nexport function cubeFaceColor() {\n  let faceColors = {};\n  return function(val, func) {\n    // val = readCubeFace(val);\n    if (func) val = func(val);\n    if (faceColors[val]) return faceColors[val];\n    var digit = val.toString()[val.toString().length - 1];\n    faceColors[val] = getRandomColor();\n    return faceColors[val];\n  };\n}\n","// @flow\n\nimport React, { Component } from \"react\";\nimport CubeCell from \"./cell\";\nimport ArrowPad from \"./arrowPad\";\nimport ScoreBoard from \"./scoreBoard\";\nimport Cube from \"./cube\";\nimport {\n  Arr3D,\n  populateArr3D,\n  AdjCounts3D,\n  fillCubeFaces,\n  cubeFaceColor\n} from \"../helpers/createCubeMap\";\nimport { rotateCube } from \"../helpers/copyCube\";\n\ntype Cell = {\n  color: string,\n  clicked: boolean,\n  recursed: boolean,\n  selected: boolean,\n  flag: boolean\n};\ntype Props = {};\ntype State = {\n  cubeSize: number,\n  bombCount: number,\n  bombVal: string,\n  theCube: Array<Array<Array<Cell>>>,\n  cellsClicked: number,\n  clickedMap: Object,\n  bombsLeft: number,\n  ratio: number,\n  spaces: number\n};\n\nexport default class Map3D extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    let cubeSize = 4;\n    let bombCount = 8;\n    let bombsLeft = bombCount;\n    let bombVal = \"☀\";\n    let ratio = 0;\n    let safeCells = cubeSize * cubeSize * cubeSize - bombCount;\n    let theCube = fillCubeFaces(\n      fillCubeFaces(\n        fillCubeFaces(\n          fillCubeFaces(\n            fillCubeFaces(\n              AdjCounts3D(\n                populateArr3D(\n                  Arr3D(cubeSize, cubeSize, cubeSize),\n                  bombVal,\n                  bombCount\n                ),\n                bombVal\n              ),\n              cubeFaceColor,\n              \"color\"\n            ),\n            () => () => false,\n            \"clicked\"\n          ),\n          () => () => false,\n          \"recursed\"\n        ),\n        () => () => false,\n        \"selected\"\n      ),\n      () => () => false,\n      \"flag\"\n    );\n    this.state = {\n      cubeSize,\n      bombCount,\n      bombVal,\n      theCube,\n      cellsClicked: 1,\n      bombsLeft,\n      ratio,\n      rotateX: 0,\n      rotateY: 0,\n      safeCells\n    };\n  }\n  incCellsClicked() {\n    let { cellsClicked, safeCells } = this.state;\n    this.setState({\n      cellsClicked: cellsClicked + 1\n    });\n    if (cellsClicked >= safeCells) alert(\"☀☀☀ You have won! ☀☀☀\");\n    console.log(cellsClicked);\n  }\n  arrowPad(arrow) {\n    let { theCube, rotateX, rotateY } = this.state;\n    this.setState({ theCube: rotateCube(theCube, arrow) });\n    switch (arrow) {\n      case \"up\":\n        if ([90, -90, 270, -270].indexOf(rotateY) === -1) {\n          rotateX -= 90;\n          if ([-360, 360].includes(rotateX)) rotateX = 0;\n          this.setState({ rotateX });\n        }\n        break;\n      case \"down\":\n        if ([90, -90, 270, -270].indexOf(rotateY) === -1) {\n          if ([-360, 360].includes(rotateX)) rotateX = 0;\n          rotateX += 90;\n          this.setState({ rotateX });\n        }\n        break;\n      case \"right\":\n        if ([90, -90, 270, -270].indexOf(rotateX) === -1) {\n          if ([-360, 360].includes(rotateY)) rotateY = 0;\n          rotateY -= 90;\n          this.setState({ rotateY });\n        }\n        break;\n      case \"left\":\n        if ([90, -90, 270, -270].indexOf(rotateX) === -1) {\n          if ([-360, 360].includes(rotateY)) rotateY = 0;\n          rotateY += 90;\n          this.setState({ rotateY });\n        }\n        break;\n      default:\n        break;\n    }\n  }\n  click(x, y, z) {\n    let { theCube, bombVal } = this.state;\n    let { flag, val, recursed, clicked } = theCube[x][y][z];\n    if (!flag) {\n      if (val !== bombVal && !clicked) this.incCellsClicked();\n      theCube[x][y][z].clicked = true;\n      this.setState({ theCube });\n      if (val === bombVal) this.setState({ bombsLeft: --this.state.bombsLeft });\n      if (val === \"\" && !recursed) {\n        theCube[x][y][z].recursed = true;\n        this.setState({ theCube });\n        let iList = [x - 1, x, x + 1];\n        let jList = [y - 1, y, y + 1];\n        let kList = [z - 1, z, z + 1];\n        for (let i of iList) {\n          if (theCube[i]) {\n            for (let j of jList) {\n              if (theCube[i][j]) {\n                for (let k of kList) {\n                  if (theCube[i][j][k] && !theCube[i][j][k].clicked) {\n                    setImmediate(() => {\n                      if (theCube[i][j][k].val !== bombVal)\n                        this.incCellsClicked();\n                    });\n                    this.click(i, j, k);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  contextMenu(x, y, z) {\n    let { theCube } = this.state;\n    let { clicked, flag } = theCube[x][y][z];\n    if (!clicked) {\n      theCube[x][y][z].flag = !flag;\n      this.setState({ theCube });\n    }\n  }\n  mouseOver(x, y, z) {\n    let { theCube, bombVal } = this.state;\n    let iList = [x - 1, x, x + 1];\n    let jList = [y - 1, y, y + 1];\n    let kList = [z - 1, z, z + 1];\n    let bombs = 0;\n    let spaces = 0;\n    let num = theCube[x][y][z].val;\n    //TODO: implement queue with mouseOut for performance\n    for (let i of iList) {\n      if (theCube[i]) {\n        for (let j of jList) {\n          if (theCube[i][j]) {\n            for (let k of kList) {\n              if (theCube[i][j][k]) {\n                if (!theCube[i][j][k].clicked) spaces++;\n                if (\n                  theCube[i][j][k].clicked &&\n                  theCube[i][j][k].val === bombVal\n                )\n                  bombs++;\n                if (!(i === x && j === y && k === z))\n                  theCube[i][j][k].selected = true;\n              }\n            }\n          }\n        }\n      }\n    }\n    let ratio: Float32Array;\n    theCube[x][y][z].clicked\n      ? (ratio = (num - bombs) / spaces)\n      : (ratio = \"n/a\");\n    this.setState({ spaces });\n    this.setState({ ratio });\n    this.setState({ theCube });\n  }\n  mouseOut() {\n    let { theCube } = this.state;\n    theCube = fillCubeFaces(theCube, () => () => false, \"selected\");\n    this.setState({ theCube });\n  }\n  render() {\n    let {\n      state: { theCube, bombsLeft, ratio, spaces, rotateX, rotateY }\n    } = this;\n    let colors = [];\n    for (let i = theCube.length - 1; i >= 0; i--) {\n      colors.push(theCube[i][0][0].color);\n    }\n    return (\n      <div>\n        <div className=\"row mapRow\">\n          {theCube.map((yArr, x) => {\n            return (\n              <table key={x} className={\" table\" + x}>\n                <tbody>\n                  {yArr.map((zArr, y) => {\n                    return (\n                      <tr key={y} className=\"cubeRow\">\n                        {zArr.map((val, z) => {\n                          return (\n                            <CubeCell\n                              mouseOver={this.mouseOver.bind(this)}\n                              mouseOut={this.mouseOut.bind(this)}\n                              click={this.click.bind(this)}\n                              contextMenu={this.contextMenu.bind(this)}\n                              key={z}\n                              x={x}\n                              y={y}\n                              z={z}\n                              val={val.val}\n                              clicked={val.clicked}\n                              color={val.color}\n                              selected={val.selected}\n                              flag={val.flag}\n                            />\n                          );\n                        })}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            );\n          })}\n        </div>\n        <div className=\"menuDiv\">\n          <Cube colors={colors} rotateX={rotateX} rotateY={rotateY} />\n          <ArrowPad arrowPad={this.arrowPad.bind(this)} />\n          <ScoreBoard bombsLeft={bombsLeft} ratio={ratio} spaces={spaces} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n\ntype Props = {\n  x: number,\n  y: number,\n  z: number,\n  val: string | number,\n  click: method,\n  clicked: boolean,\n  color: string,\n  flag: boolean,\n  contextMenu: method\n};\ntype State = {};\n// let endMineSweeperGame = false;\nexport default class CubeCell extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n  }\n  handleContextMenu(e: SyntheticMouseEvent<>) {\n    e.preventDefault();\n    console.log(\"here\");\n    let { clicked, contextMenu, x, y, z } = this.props;\n    if (!clicked) contextMenu(x, y, z);\n  }\n  handleClick() {\n    let { x, y, z, click } = this.props;\n    click(x, y, z);\n  }\n  handleMouseOver() {\n    let { x, y, z, mouseOver } = this.props;\n    mouseOver(x, y, z);\n  }\n  render() {\n    let { x, y, z, val, clicked, color, selected, mouseOut, flag } = this.props;\n    let cellsClass = classNames({\n      cell: true,\n      clicked,\n      bomb: this.props.val === \"☀\",\n      selected\n    });\n    const colorStyle = {\n      backgroundColor: color\n    };\n    return (\n      <td\n        id={`${x}_${y}_${z}`}\n        className={cellsClass}\n        onClick={this.handleClick.bind(this)}\n        onContextMenu={this.handleContextMenu.bind(this)}\n        onMouseOver={this.handleMouseOver.bind(this)}\n        onMouseLeave={mouseOut}\n        style={colorStyle}\n      >\n        {clicked ? val : \"\"}\n        {flag ? \"⚑\" : \"\"}\n      </td>\n    );\n  }\n}\n","// @flow\n\nimport React, { Component } from \"react\";\n\ntype Props = {};\ntype State = {};\n\nexport default class ArrowPad extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  upArrow() {\n    let { arrowPad } = this.props;\n    arrowPad(\"down\");\n  }\n  rightArrow() {\n    let { arrowPad } = this.props;\n    arrowPad(\"left\");\n  }\n  leftArrow() {\n    let { arrowPad } = this.props;\n    arrowPad(\"right\");\n  }\n  downArrow() {\n    let { arrowPad } = this.props;\n    arrowPad(\"up\");\n  }\n\n  render() {\n    return (\n      <div>\n        <table className=\"arrowPad\">\n          <tbody>\n            <tr>\n              <td className=\"hidden\" />\n              <td onClick={this.upArrow.bind(this)}> ↑ </td>\n              <td className=\"hidden\" />\n            </tr>\n            <tr>\n              <td onClick={this.leftArrow.bind(this)}> ← </td>\n              <td className=\"arrowPadMid\"> </td>\n              <td onClick={this.rightArrow.bind(this)}> → </td>\n            </tr>\n            <tr>\n              <td className=\"hidden\" />\n              <td onClick={this.downArrow.bind(this)}> ↓ </td>\n              <td className=\"hidden\" />\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React, { Component } from \"react\";\n\ntype Props = {\n  bombsLeft: number,\n  ratio: float\n};\ntype State = {};\n\nexport default class ScoreBoard extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  render() {\n    let { bombsLeft, ratio, spaces } = this.props;\n    return (\n      <div>\n        <table className=\"arrowPad\">\n          <tbody>\n            <tr>\n              <td> Bombs Left: </td>\n              <td> Spaces: </td>\n              <td> Fraction: </td>\n              <td> Ratio: </td>\n            </tr>\n            <tr>\n              <td>{bombsLeft}</td>\n              <td> {spaces} </td>\n              <td>{ratio}</td>\n              <td> {1 / ratio}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React, { Component } from \"react\";\n\ntype Props = { colors: Array<string>, rotateY: number, rotateX: number };\ntype State = {};\n\nexport default class Cube extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      colors: this.props.colors\n    };\n  }\n  render() {\n    let { colors } = this.state;\n    let { rotateX, rotateY } = this.props;\n    let rotateStyle = {\n      transform: `rotateY(${rotateY}deg) rotateX(${rotateX}deg)`\n    };\n    return (\n      <div className=\"wrap\">\n        <div className=\"cube\" style={rotateStyle}>\n          {colors.map((item, i) => {\n            const divStyle = {\n              transform: `translateZ(${i * 50}px)`,\n              backgroundColor: item,\n              opacity: 0.75\n            };\n            return <div key={i} style={divStyle} />;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","import { Arr3D } from \"./createCubeMap\";\n\nexport function rotateCube(\n  OCube: Array<Array<Array<number | string>>>,\n  direction: string\n) {\n  let newCube: Array<Array<Array<number | string>>>;\n  let x = OCube.length;\n  let y = OCube[0].length;\n  let z = OCube[0][0].length;\n\n  newCube = Arr3D(x, y, z);\n\n  for (let i = 0; i < x; i++) {\n    for (let j = 0; j < y; j++) {\n      for (let k = 0; k < z; k++) {\n        if (direction === \"right\") {\n          let new_i = x - k - 1;\n          newCube[new_i][j][i] = OCube[i][j][k];\n        } else if (direction === \"left\") {\n          let new_k = x - i - 1;\n          newCube[k][j][new_k] = OCube[i][j][k];\n        } else if (direction === \"down\") {\n          let new_i = x - j - 1;\n          newCube[new_i][i][k] = OCube[i][j][k];\n        } else if (direction === \"up\") {\n          let new_j = x - i - 1;\n          newCube[j][new_j][k] = OCube[i][j][k];\n        }\n      }\n    }\n  }\n  return newCube;\n}\n\n// function queueWrap() {\n//   let storage = [];\n//   let i = 0;\n//   return {\n//     add: val => {\n//       storage.push(val);\n//     },\n//     dequeue: () => {\n//       if (storage[i] === undefined) {\n//         storage.length = 0;\n//         i = 0;\n//       } else {\n//         i++;\n//         return storage[i - 1];\n//       }\n//     }\n//   };\n// }\n","import React, { Component } from \"react\";\nimport Map3D from \"./containers/map\";\n// import MSInfo from \"./statelessComps/minesweeperInfo\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"App\">\n          <br />\n          <Map3D className=\"map\" />\n          {/* <MSInfo /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}