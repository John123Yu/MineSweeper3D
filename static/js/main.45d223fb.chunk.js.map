{"version":3,"sources":["containers/cubeCell.js","containers/arrowPad.js","containers/scoreBoard.js","helpers/createCubeMap.js","helpers/copyCube.js","containers/3dMap.js","App.js","serviceWorker.js","index.js"],"names":["CubeCell","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","_this$props","x","y","z","click","_this$props2","mouseOver","_this$props3","val","clicked","color","selected","mouseOut","cellsClass","classNames","cell","bomb","colorStyle","backgroundColor","react_default","a","createElement","id","concat","className","onClick","handleClick","bind","onMouseOver","handleMouseOver","onMouseLeave","style","Component","ArrowPad","arrowPad","upArrow","leftArrow","rightArrow","downArrow","ScoreBoard","bombsLeft","ratio","Arr3D","arguments","length","undefined","firArr","i","secArr","j","thirArr","k","push","incrAdjArr3D","iList","jList","kList","_i","_i2","b","_i3","c","fillCubeFaces","filler","name","faceFiller","value","floorRand","scale","Math","floor","random","cubeFaceColor","faceColors","func","toString","getRandomColor","rotateCube","OCube","direction","newCube","new_k","new_j","Map3D","_this","theCube","cubeLen","AdjCounts3D","count","Xlen","Ylen","Zlen","populateArr3D","state","cubeSize","bombCount","bombVal","cellsClicked","console","log","arrow","setState","_this$state","recursed","_this$state2","bombs","cells","num","_i4","_i5","_i6","_this2","_this$state3","map","yArr","key","zArr","cubeCell_CubeCell","arrowPad_ArrowPad","scoreBoard_ScoreBoard","App","_3dMap_Map3D","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.45d223fb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n\ntype Props = {\n  x: number,\n  y: number,\n  z: number,\n  val: string | number,\n  click: method,\n  clicked: boolean,\n  color: string\n};\ntype State = {};\n// let endMineSweeperGame = false;\nexport default class CubeCell extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n  }\n  handleContextMenu(e: SyntheticMouseEvent<>) {}\n  handleClick() {\n    let { x, y, z, click } = this.props;\n    click(x, y, z);\n  }\n  handleMouseOver() {\n    let { x, y, z, mouseOver } = this.props;\n    mouseOver(x, y, z);\n  }\n  render() {\n    let { x, y, z, val, clicked, color, selected, mouseOut } = this.props;\n    let cellsClass = classNames({\n      cell: true,\n      clicked,\n      bomb: this.props.val === \"☀\",\n      selected\n    });\n    const colorStyle = {\n      backgroundColor: color\n    };\n    return (\n      <td\n        id={`${x}_${y}_${z}`}\n        className={cellsClass}\n        onClick={this.handleClick.bind(this)}\n        onMouseOver={this.handleMouseOver.bind(this)}\n        onMouseLeave={mouseOut}\n        style={colorStyle}\n      >\n        {clicked ? val : \"\"}\n      </td>\n    );\n  }\n}\n","// @flow\n\nimport React, { Component } from \"react\";\n\ntype Props = {};\ntype State = {};\n\nexport default class ArrowPad extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  upArrow() {\n    let { arrowPad } = this.props;\n    arrowPad(\"down\");\n  }\n  rightArrow() {\n    let { arrowPad } = this.props;\n    arrowPad(\"left\");\n  }\n  leftArrow() {\n    let { arrowPad } = this.props;\n    arrowPad(\"right\");\n  }\n  downArrow() {\n    let { arrowPad } = this.props;\n    arrowPad(\"up\");\n  }\n\n  render() {\n    return (\n      <div>\n        <table className=\"arrowPad\">\n          <tbody>\n            <tr>\n              <td className=\"hidden\" />\n              <td onClick={this.upArrow.bind(this)}> ↑ </td>\n              <td className=\"hidden\" />\n            </tr>\n            <tr>\n              <td onClick={this.leftArrow.bind(this)}> ← </td>\n              <td className=\"arrowPadMid\"> </td>\n              <td onClick={this.rightArrow.bind(this)}> → </td>\n            </tr>\n            <tr>\n              <td className=\"hidden\" />\n              <td onClick={this.downArrow.bind(this)}> ↓ </td>\n              <td className=\"hidden\" />\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React, { Component } from \"react\";\n\ntype Props = {\n  bombsLeft: number,\n  ratio: float\n};\ntype State = {};\n\nexport default class ScoreBoard extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  render() {\n    let { bombsLeft, ratio } = this.props;\n    return (\n      <div>\n        <table className=\"arrowPad\">\n          <tbody>\n            <tr>\n              <td> Bombs Left: </td>\n              <td> Fraction: </td>\n              <td> Ratio: </td>\n            </tr>\n            <tr>\n              <td>{bombsLeft}</td>\n              <td>{ratio}</td>\n              <td> {1 / ratio}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","// @flow\nexport function Arr3D(x: number, y: number, z: number, val = \"\") {\n  let firArr: Array<Array<Array<number | string>>> = [];\n  for (let i = 0; i < x; i++) {\n    let secArr: Array<Array<number | string>> = [];\n    for (let j = 0; j < y; j++) {\n      let thirArr: Array<number | string> = [];\n      for (let k = 0; k < z; k++) {\n        thirArr.push({ val });\n      }\n      secArr.push(thirArr);\n    }\n    firArr.push(secArr);\n  }\n  return firArr;\n}\nexport function populateArr3D(\n  Arr3D: Array<Array<Array<number | string>>>,\n  val: string | number,\n  count: number\n) {\n  let Xlen = Arr3D.length;\n  let Ylen = Arr3D[0].length;\n  let Zlen = Arr3D[0][0].length;\n  while (count) {\n    let x = floorRand(Xlen);\n    let y = floorRand(Ylen);\n    let z = floorRand(Zlen);\n    if (!Arr3D[x][y][z].val) {\n      Arr3D[x][y][z].val = val;\n      count--;\n    }\n  }\n  return Arr3D;\n}\nexport function AdjCounts3D(\n  Arr3D: Array<Array<Array<number | string>>>,\n  val: string | number\n) {\n  let cubeLen = Arr3D.length;\n  for (let i = 0; i < cubeLen; i++) {\n    for (let j = 0; j < cubeLen; j++) {\n      for (let k = 0; k < cubeLen; k++) {\n        if (Arr3D[i][j][k].val === val) {\n          Arr3D = incrAdjArr3D(Arr3D, val, i, j, k);\n        }\n      }\n    }\n  }\n  return Arr3D;\n}\nfunction incrAdjArr3D(\n  Arr3D: Array<Array<Array<number | string>>>,\n  val: string | number,\n  i: number,\n  j: number,\n  k: number\n) {\n  let iList = [i - 1, i, i + 1];\n  let jList = [j - 1, j, j + 1];\n  let kList = [k - 1, k, k + 1];\n  for (let a of iList) {\n    if (Arr3D[a] !== undefined) {\n      for (let b of jList) {\n        if (Arr3D[a][b] !== undefined) {\n          for (let c of kList) {\n            if (Arr3D[a][b][c] !== undefined && Arr3D[a][b][c].val !== val) {\n              if (typeof Arr3D[a][b][c].val !== \"number\") {\n                Arr3D[a][b][c].val = 0;\n              }\n              Arr3D[a][b][c].val++;\n            }\n          }\n        }\n      }\n    }\n  }\n  return Arr3D;\n}\nexport function fillCubeFaces(\n  Arr3D: Array<Array<Array<number | string>>>,\n  filler, //memoized function\n  name: string\n) {\n  let x = Arr3D.length;\n  let y = Arr3D[0].length;\n  let z = Arr3D[0][0].length;\n  let faceFiller = filler();\n\n  for (let i = 0; i < x; i++) {\n    let value = faceFiller(i);\n    for (let j = 0; j < y; j++) {\n      for (let k = 0; k < z; k++) {\n        Arr3D[i][j][k][name] = value;\n      }\n    }\n  }\n  return Arr3D;\n}\nfunction floorRand(scale: number) {\n  return Math.floor(Math.random() * scale);\n}\nfunction readCubeFace(face) {\n  let vals = 0;\n  for (let i = 0; i < face.length; i++) {\n    for (let j = 0; j < face.length; j++) {\n      if (typeof face[i][j] !== \"number\") vals += 0.00001;\n      else {\n        if (face[i][j] >= 10) {\n          vals += face[i][j];\n          vals -= 10;\n        } else {\n          vals += face[i][j];\n        }\n      }\n    }\n  }\n  return vals;\n}\nfunction getRandomColor() {\n  var letters = \"0123456789ABCDEF\";\n  var color = \"#\";\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nexport function cubeFaceColor() {\n  let faceColors = {};\n  return function(val, func) {\n    // val = readCubeFace(val);\n    if (func) val = func(val);\n    if (faceColors[val]) return faceColors[val];\n    var digit = val.toString()[val.toString().length - 1];\n    faceColors[val] = getRandomColor();\n    return faceColors[val];\n  };\n}\n","import { Arr3D } from \"./createCubeMap\";\n\nexport function rotateCube(\n  OCube: Array<Array<Array<number | string>>>,\n  direction: string\n) {\n  let newCube: Array<Array<Array<number | string>>>;\n  let x = OCube.length;\n  let y = OCube[0].length;\n  let z = OCube[0][0].length;\n\n  newCube = Arr3D(x, y, z);\n\n  for (let i = 0; i < x; i++) {\n    for (let j = 0; j < y; j++) {\n      for (let k = 0; k < z; k++) {\n        if (direction === \"right\") {\n          let new_i = x - k - 1;\n          newCube[new_i][j][i] = OCube[i][j][k];\n        } else if (direction === \"left\") {\n          let new_k = x - i - 1;\n          newCube[k][j][new_k] = OCube[i][j][k];\n        } else if (direction === \"down\") {\n          let new_i = x - j - 1;\n          newCube[new_i][i][k] = OCube[i][j][k];\n        } else if (direction === \"up\") {\n          let new_j = x - i - 1;\n          newCube[j][new_j][k] = OCube[i][j][k];\n        }\n      }\n    }\n  }\n  return newCube;\n}\n\n// function queueWrap() {\n//   let storage = [];\n//   let i = 0;\n//   return {\n//     add: val => {\n//       storage.push(val);\n//     },\n//     dequeue: () => {\n//       if (storage[i] === undefined) {\n//         storage.length = 0;\n//         i = 0;\n//       } else {\n//         i++;\n//         return storage[i - 1];\n//       }\n//     }\n//   };\n// }\n","// @flow\n\nimport React, { Component } from \"react\";\nimport CubeCell from \"./cubeCell\";\nimport ArrowPad from \"./arrowPad\";\nimport ScoreBoard from \"./scoreBoard\";\nimport {\n  Arr3D,\n  populateArr3D,\n  AdjCounts3D,\n  fillCubeFaces,\n  cubeFaceColor\n} from \"../helpers/createCubeMap\";\nimport { rotateCube } from \"../helpers/copyCube\";\n// import classNames from \"classnames\";\n\ntype Props = {};\ntype State = {\n  cubeSize: number,\n  bombCount: number,\n  bombVal: string,\n  theCube: Array<Array<Array<number | string>>>,\n  cellsClicked: number,\n  clickedMap: Object,\n  bombsLeft: number,\n  ratio: number\n};\n\nexport default class Map3D extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    let cubeSize = 4;\n    let bombCount = 8;\n    let bombsLeft = bombCount;\n    let bombVal = \"☀\";\n    let ratio = 0;\n    let theCube = fillCubeFaces(\n      fillCubeFaces(\n        fillCubeFaces(\n          fillCubeFaces(\n            AdjCounts3D(\n              populateArr3D(\n                Arr3D(cubeSize, cubeSize, cubeSize),\n                bombVal,\n                bombCount\n              ),\n              bombVal\n            ),\n            cubeFaceColor,\n            \"color\"\n          ),\n          () => () => false,\n          \"clicked\"\n        ),\n        () => () => false,\n        \"recursed\"\n      ),\n      () => () => false,\n      \"selected\"\n    );\n    this.state = {\n      cubeSize,\n      bombCount,\n      bombVal,\n      theCube,\n      cellsClicked: 1,\n      bombsLeft,\n      ratio\n    };\n    console.log(this.state.theCube);\n  }\n  arrowPad(arrow) {\n    this.setState({ theCube: rotateCube(this.state.theCube, arrow) });\n  }\n  click(x, y, z) {\n    let { theCube, bombVal } = this.state;\n    theCube[x][y][z].clicked = true;\n    this.setState({ theCube });\n\n    if (theCube[x][y][z].val === bombVal)\n      this.setState({ bombsLeft: --this.state.bombsLeft });\n    //recursion\n    if (theCube[x][y][z].val === \"\" && !theCube[x][y][z].recursed) {\n      theCube[x][y][z].recursed = true;\n      this.setState({ theCube });\n      let iList = [x - 1, x, x + 1];\n      let jList = [y - 1, y, y + 1];\n      let kList = [z - 1, z, z + 1];\n      for (let i of iList) {\n        if (theCube[i]) {\n          for (let j of jList) {\n            if (theCube[i][j]) {\n              for (let k of kList) {\n                if (theCube[i][j][k] && !theCube[i][j][k].clicked) {\n                  this.click(i, j, k);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  mouseOver(x, y, z) {\n    let { theCube, bombVal } = this.state;\n    let iList = [x - 1, x, x + 1];\n    let jList = [y - 1, y, y + 1];\n    let kList = [z - 1, z, z + 1];\n    let bombs = 0;\n    let cells = 0;\n    let num = theCube[x][y][z].val;\n    //TODO: implement queue with mouseOut for performance\n    for (let i of iList) {\n      if (theCube[i]) {\n        for (let j of jList) {\n          if (theCube[i][j]) {\n            for (let k of kList) {\n              if (theCube[i][j][k]) {\n                if (!theCube[i][j][k].clicked) cells++;\n                if (\n                  theCube[i][j][k].clicked &&\n                  theCube[i][j][k].val === bombVal\n                )\n                  bombs++;\n                if (!(i === x && j === y && k === z))\n                  theCube[i][j][k].selected = true;\n              }\n            }\n          }\n        }\n      }\n    }\n    let ratio: Float32Array;\n    theCube[x][y][z].clicked\n      ? (ratio = (num - bombs) / cells)\n      : (ratio = \"n/a\");\n    this.setState({ ratio });\n    this.setState({ theCube });\n  }\n  mouseOut() {\n    let { theCube } = this.state;\n    theCube = fillCubeFaces(theCube, () => () => false, \"selected\");\n    this.setState({ theCube });\n  }\n\n  render() {\n    let {\n      state: { theCube, bombsLeft, ratio }\n    } = this;\n    return (\n      <div>\n        <div className=\"row mapRow\">\n          {theCube.map((yArr, x) => {\n            return (\n              <table key={x} className={\" table\" + x}>\n                <tbody>\n                  {yArr.map((zArr, y) => {\n                    return (\n                      <tr key={y} className=\"cubeRow\">\n                        {zArr.map((val, z) => {\n                          return (\n                            <CubeCell\n                              mouseOver={this.mouseOver.bind(this)}\n                              mouseOut={this.mouseOut.bind(this)}\n                              click={this.click.bind(this)}\n                              key={z}\n                              x={x}\n                              y={y}\n                              z={z}\n                              val={val.val}\n                              clicked={val.clicked}\n                              color={val.color}\n                              selected={val.selected}\n                            />\n                          );\n                        })}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            );\n          })}\n        </div>\n        <div>\n          <ArrowPad arrowPad={this.arrowPad.bind(this)} />\n          <ScoreBoard bombsLeft={bombsLeft} ratio={ratio} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Map3D from \"./containers/3dMap\";\n// import MSInfo from \"./statelessComps/minesweeperInfo\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"App\">\n          <br />\n          <Map3D className=\"map\" />\n          {/* <MSInfo /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}