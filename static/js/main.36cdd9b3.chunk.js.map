{"version":3,"sources":["containers/cell.js","containers/arrowPad.js","containers/scoreBoard.js","containers/cube.js","helpers/createCubeMap.js","helpers/copyCube.js","containers/map.js","App.js","serviceWorker.js","index.js"],"names":["CubeCell","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","preventDefault","console","log","_this$props","clicked","contextMenu","x","y","z","_this$props2","click","_this$props3","mouseOver","_this$props4","val","color","selected","mouseOut","flag","cellsClass","classNames","cell","bomb","colorStyle","backgroundColor","react_default","a","createElement","id","concat","className","onClick","handleClick","bind","onContextMenu","handleContextMenu","onMouseOver","handleMouseOver","onMouseLeave","style","Component","ArrowPad","arrowPad","upArrow","leftArrow","rightArrow","downArrow","ScoreBoard","bombsLeft","ratio","spaces","Cube","_this","state","colors","rotateX","rotateY","rotateStyle","transform","map","item","i","divStyle","opacity","key","Arr3D","arguments","length","undefined","firArr","secArr","j","thirArr","k","push","incrAdjArr3D","iList","jList","kList","_i","_i2","b","_i3","c","fillCubeFaces","filler","name","faceFiller","value","floorRand","scale","Math","floor","random","cubeFaceColor","faceColors","func","toString","getRandomColor","rotateCube","OCube","direction","newCube","new_k","new_j","Map3D","theCube","cubeLen","AdjCounts3D","count","Xlen","Ylen","Zlen","populateArr3D","cubeSize","bombCount","bombVal","cellsClicked","arrow","_this$state","setState","indexOf","includes","_this$state2","_theCube$x$y$z","recursed","_theCube$x$y$z2","_this$state3","bombs","num","_i4","_i5","_i6","_this2","_this$state4","yArr","zArr","cell_CubeCell","cube_Cube","arrowPad_ArrowPad","scoreBoard_ScoreBoard","App","map_Map3D","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.36cdd9b3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n\ntype Props = {\n  x: number,\n  y: number,\n  z: number,\n  val: string | number,\n  click: method,\n  clicked: boolean,\n  color: string,\n  flag: boolean,\n  contextMenu: method\n};\ntype State = {};\n// let endMineSweeperGame = false;\nexport default class CubeCell extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n  }\n  handleContextMenu(e: SyntheticMouseEvent<>) {\n    e.preventDefault();\n    console.log(\"here\");\n    let { clicked, contextMenu, x, y, z } = this.props;\n    if (!clicked) contextMenu(x, y, z);\n  }\n  handleClick() {\n    let { x, y, z, click } = this.props;\n    click(x, y, z);\n  }\n  handleMouseOver() {\n    let { x, y, z, mouseOver } = this.props;\n    mouseOver(x, y, z);\n  }\n  render() {\n    let { x, y, z, val, clicked, color, selected, mouseOut, flag } = this.props;\n    let cellsClass = classNames({\n      cell: true,\n      clicked,\n      bomb: this.props.val === \"☀\",\n      selected\n    });\n    const colorStyle = {\n      backgroundColor: color\n    };\n    return (\n      <td\n        id={`${x}_${y}_${z}`}\n        className={cellsClass}\n        onClick={this.handleClick.bind(this)}\n        onContextMenu={this.handleContextMenu.bind(this)}\n        onMouseOver={this.handleMouseOver.bind(this)}\n        onMouseLeave={mouseOut}\n        style={colorStyle}\n      >\n        {clicked ? val : \"\"}\n        {flag ? \"⚑\" : \"\"}\n      </td>\n    );\n  }\n}\n","// @flow\n\nimport React, { Component } from \"react\";\n\ntype Props = {};\ntype State = {};\n\nexport default class ArrowPad extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  upArrow() {\n    let { arrowPad } = this.props;\n    arrowPad(\"down\");\n  }\n  rightArrow() {\n    let { arrowPad } = this.props;\n    arrowPad(\"left\");\n  }\n  leftArrow() {\n    let { arrowPad } = this.props;\n    arrowPad(\"right\");\n  }\n  downArrow() {\n    let { arrowPad } = this.props;\n    arrowPad(\"up\");\n  }\n\n  render() {\n    return (\n      <div>\n        <table className=\"arrowPad\">\n          <tbody>\n            <tr>\n              <td className=\"hidden\" />\n              <td onClick={this.upArrow.bind(this)}> ↑ </td>\n              <td className=\"hidden\" />\n            </tr>\n            <tr>\n              <td onClick={this.leftArrow.bind(this)}> ← </td>\n              <td className=\"arrowPadMid\"> </td>\n              <td onClick={this.rightArrow.bind(this)}> → </td>\n            </tr>\n            <tr>\n              <td className=\"hidden\" />\n              <td onClick={this.downArrow.bind(this)}> ↓ </td>\n              <td className=\"hidden\" />\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React, { Component } from \"react\";\n\ntype Props = {\n  bombsLeft: number,\n  ratio: float\n};\ntype State = {};\n\nexport default class ScoreBoard extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  render() {\n    let { bombsLeft, ratio, spaces } = this.props;\n    return (\n      <div>\n        <table className=\"arrowPad\">\n          <tbody>\n            <tr>\n              <td> Bombs Left: </td>\n              <td> Spaces: </td>\n              <td> Fraction: </td>\n              <td> Ratio: </td>\n            </tr>\n            <tr>\n              <td>{bombsLeft}</td>\n              <td> {spaces} </td>\n              <td>{ratio}</td>\n              <td> {1 / ratio}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React, { Component } from \"react\";\n\ntype Props = { colors: Array<string>, rotateY: number, rotateX: number };\ntype State = {};\n\nexport default class Cube extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      colors: this.props.colors\n    };\n  }\n  render() {\n    let { colors } = this.state;\n    let { rotateX, rotateY } = this.props;\n    let rotateStyle = {\n      transform: `rotateY(${rotateY}deg) rotateX(${rotateX}deg)`\n    };\n    return (\n      <div className=\"wrap\">\n        <div className=\"cube\" style={rotateStyle}>\n          {colors.map((item, i) => {\n            const divStyle = {\n              transform: `translateZ(${i * 50}px)`,\n              backgroundColor: item,\n              opacity: 0.75\n            };\n            return <div key={i} style={divStyle} />;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","// @flow\nexport function Arr3D(x: number, y: number, z: number, val = \"\") {\n  let firArr: Array<Array<Array<number | string>>> = [];\n  for (let i = 0; i < x; i++) {\n    let secArr: Array<Array<number | string>> = [];\n    for (let j = 0; j < y; j++) {\n      let thirArr: Array<number | string> = [];\n      for (let k = 0; k < z; k++) {\n        thirArr.push({ val });\n      }\n      secArr.push(thirArr);\n    }\n    firArr.push(secArr);\n  }\n  return firArr;\n}\nexport function populateArr3D(\n  Arr3D: Array<Array<Array<number | string>>>,\n  val: string | number,\n  count: number\n) {\n  let Xlen = Arr3D.length;\n  let Ylen = Arr3D[0].length;\n  let Zlen = Arr3D[0][0].length;\n  while (count) {\n    let x = floorRand(Xlen);\n    let y = floorRand(Ylen);\n    let z = floorRand(Zlen);\n    if (!Arr3D[x][y][z].val) {\n      Arr3D[x][y][z].val = val;\n      count--;\n    }\n  }\n  return Arr3D;\n}\nexport function AdjCounts3D(\n  Arr3D: Array<Array<Array<number | string>>>,\n  val: string | number\n) {\n  let cubeLen = Arr3D.length;\n  for (let i = 0; i < cubeLen; i++) {\n    for (let j = 0; j < cubeLen; j++) {\n      for (let k = 0; k < cubeLen; k++) {\n        if (Arr3D[i][j][k].val === val) {\n          Arr3D = incrAdjArr3D(Arr3D, val, i, j, k);\n        }\n      }\n    }\n  }\n  return Arr3D;\n}\nfunction incrAdjArr3D(\n  Arr3D: Array<Array<Array<number | string>>>,\n  val: string | number,\n  i: number,\n  j: number,\n  k: number\n) {\n  let iList = [i - 1, i, i + 1];\n  let jList = [j - 1, j, j + 1];\n  let kList = [k - 1, k, k + 1];\n  for (let a of iList) {\n    if (Arr3D[a] !== undefined) {\n      for (let b of jList) {\n        if (Arr3D[a][b] !== undefined) {\n          for (let c of kList) {\n            if (Arr3D[a][b][c] !== undefined && Arr3D[a][b][c].val !== val) {\n              if (typeof Arr3D[a][b][c].val !== \"number\") {\n                Arr3D[a][b][c].val = 0;\n              }\n              Arr3D[a][b][c].val++;\n            }\n          }\n        }\n      }\n    }\n  }\n  return Arr3D;\n}\nexport function fillCubeFaces(\n  Arr3D: Array<Array<Array<number | string>>>,\n  filler, //memoized function\n  name: string\n) {\n  let x = Arr3D.length;\n  let y = Arr3D[0].length;\n  let z = Arr3D[0][0].length;\n  let faceFiller = filler();\n\n  for (let i = 0; i < x; i++) {\n    let value = faceFiller(i);\n    for (let j = 0; j < y; j++) {\n      for (let k = 0; k < z; k++) {\n        Arr3D[i][j][k][name] = value;\n      }\n    }\n  }\n  return Arr3D;\n}\nfunction floorRand(scale: number) {\n  return Math.floor(Math.random() * scale);\n}\nfunction readCubeFace(face) {\n  let vals = 0;\n  for (let i = 0; i < face.length; i++) {\n    for (let j = 0; j < face.length; j++) {\n      if (typeof face[i][j] !== \"number\") vals += 0.00001;\n      else {\n        if (face[i][j] >= 10) {\n          vals += face[i][j];\n          vals -= 10;\n        } else {\n          vals += face[i][j];\n        }\n      }\n    }\n  }\n  return vals;\n}\nfunction getRandomColor() {\n  var letters = \"0123456789ABCDEF\";\n  var color = \"#\";\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nexport function cubeFaceColor() {\n  let faceColors = {};\n  return function(val, func) {\n    // val = readCubeFace(val);\n    if (func) val = func(val);\n    if (faceColors[val]) return faceColors[val];\n    var digit = val.toString()[val.toString().length - 1];\n    faceColors[val] = getRandomColor();\n    return faceColors[val];\n  };\n}\n","import { Arr3D } from \"./createCubeMap\";\n\nexport function rotateCube(\n  OCube: Array<Array<Array<number | string>>>,\n  direction: string\n) {\n  let newCube: Array<Array<Array<number | string>>>;\n  let x = OCube.length;\n  let y = OCube[0].length;\n  let z = OCube[0][0].length;\n\n  newCube = Arr3D(x, y, z);\n\n  for (let i = 0; i < x; i++) {\n    for (let j = 0; j < y; j++) {\n      for (let k = 0; k < z; k++) {\n        if (direction === \"right\") {\n          let new_i = x - k - 1;\n          newCube[new_i][j][i] = OCube[i][j][k];\n        } else if (direction === \"left\") {\n          let new_k = x - i - 1;\n          newCube[k][j][new_k] = OCube[i][j][k];\n        } else if (direction === \"down\") {\n          let new_i = x - j - 1;\n          newCube[new_i][i][k] = OCube[i][j][k];\n        } else if (direction === \"up\") {\n          let new_j = x - i - 1;\n          newCube[j][new_j][k] = OCube[i][j][k];\n        }\n      }\n    }\n  }\n  return newCube;\n}\n\n// function queueWrap() {\n//   let storage = [];\n//   let i = 0;\n//   return {\n//     add: val => {\n//       storage.push(val);\n//     },\n//     dequeue: () => {\n//       if (storage[i] === undefined) {\n//         storage.length = 0;\n//         i = 0;\n//       } else {\n//         i++;\n//         return storage[i - 1];\n//       }\n//     }\n//   };\n// }\n","// @flow\n\nimport React, { Component } from \"react\";\nimport CubeCell from \"./cell\";\nimport ArrowPad from \"./arrowPad\";\nimport ScoreBoard from \"./scoreBoard\";\nimport Cube from \"./cube\";\nimport {\n  Arr3D,\n  populateArr3D,\n  AdjCounts3D,\n  fillCubeFaces,\n  cubeFaceColor\n} from \"../helpers/createCubeMap\";\nimport { rotateCube } from \"../helpers/copyCube\";\n\ntype Cell = {\n  color: string,\n  clicked: boolean,\n  recursed: boolean,\n  selected: boolean,\n  flag: boolean\n};\ntype Props = {};\ntype State = {\n  cubeSize: number,\n  bombCount: number,\n  bombVal: string,\n  theCube: Array<Array<Array<Cell>>>,\n  cellsClicked: number,\n  clickedMap: Object,\n  bombsLeft: number,\n  ratio: number,\n  spaces: number\n};\n\nexport default class Map3D extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    let cubeSize = 4;\n    let bombCount = 8;\n    let bombsLeft = bombCount;\n    let bombVal = \"☀\";\n    let ratio = 0;\n    let theCube = fillCubeFaces(\n      fillCubeFaces(\n        fillCubeFaces(\n          fillCubeFaces(\n            fillCubeFaces(\n              AdjCounts3D(\n                populateArr3D(\n                  Arr3D(cubeSize, cubeSize, cubeSize),\n                  bombVal,\n                  bombCount\n                ),\n                bombVal\n              ),\n              cubeFaceColor,\n              \"color\"\n            ),\n            () => () => false,\n            \"clicked\"\n          ),\n          () => () => false,\n          \"recursed\"\n        ),\n        () => () => false,\n        \"selected\"\n      ),\n      () => () => false,\n      \"flag\"\n    );\n    this.state = {\n      cubeSize,\n      bombCount,\n      bombVal,\n      theCube,\n      cellsClicked: 1,\n      bombsLeft,\n      ratio,\n      rotateX: 0,\n      rotateY: 0\n    };\n  }\n  arrowPad(arrow) {\n    let { theCube, rotateX, rotateY } = this.state;\n    this.setState({ theCube: rotateCube(theCube, arrow) });\n    switch (arrow) {\n      case \"up\":\n        if ([90, -90, 270, -270].indexOf(rotateY) === -1) {\n          rotateX -= 90;\n          if ([-360, 360].includes(rotateX)) rotateX = 0;\n          this.setState({ rotateX });\n        }\n        break;\n      case \"down\":\n        if ([90, -90, 270, -270].indexOf(rotateY) === -1) {\n          if ([-360, 360].includes(rotateX)) rotateX = 0;\n          rotateX += 90;\n          this.setState({ rotateX });\n        }\n        break;\n      case \"right\":\n        if ([90, -90, 270, -270].indexOf(rotateX) === -1) {\n          if ([-360, 360].includes(rotateY)) rotateY = 0;\n          rotateY -= 90;\n          this.setState({ rotateY });\n        }\n        break;\n      case \"left\":\n        if ([90, -90, 270, -270].indexOf(rotateX) === -1) {\n          if ([-360, 360].includes(rotateY)) rotateY = 0;\n          rotateY += 90;\n          this.setState({ rotateY });\n        }\n        break;\n      default:\n        break;\n    }\n  }\n  click(x, y, z) {\n    let { theCube, bombVal } = this.state;\n    let { flag, val, recursed } = theCube[x][y][z];\n\n    if (!flag) {\n      theCube[x][y][z].clicked = true;\n      this.setState({ theCube });\n\n      if (val === bombVal) this.setState({ bombsLeft: --this.state.bombsLeft });\n\n      if (val === \"\" && !recursed) {\n        theCube[x][y][z].recursed = true;\n        this.setState({ theCube });\n        let iList = [x - 1, x, x + 1];\n        let jList = [y - 1, y, y + 1];\n        let kList = [z - 1, z, z + 1];\n        for (let i of iList) {\n          if (theCube[i]) {\n            for (let j of jList) {\n              if (theCube[i][j]) {\n                for (let k of kList) {\n                  if (theCube[i][j][k] && !theCube[i][j][k].clicked) {\n                    this.click(i, j, k);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  contextMenu(x, y, z) {\n    let { theCube } = this.state;\n    let { clicked, flag } = theCube[x][y][z];\n    if (!clicked) {\n      theCube[x][y][z].flag = !flag;\n      this.setState({ theCube });\n    }\n  }\n  mouseOver(x, y, z) {\n    let { theCube, bombVal } = this.state;\n    let iList = [x - 1, x, x + 1];\n    let jList = [y - 1, y, y + 1];\n    let kList = [z - 1, z, z + 1];\n    let bombs = 0;\n    let spaces = 0;\n    let num = theCube[x][y][z].val;\n    //TODO: implement queue with mouseOut for performance\n    for (let i of iList) {\n      if (theCube[i]) {\n        for (let j of jList) {\n          if (theCube[i][j]) {\n            for (let k of kList) {\n              if (theCube[i][j][k]) {\n                if (!theCube[i][j][k].clicked) spaces++;\n                if (\n                  theCube[i][j][k].clicked &&\n                  theCube[i][j][k].val === bombVal\n                )\n                  bombs++;\n                if (!(i === x && j === y && k === z))\n                  theCube[i][j][k].selected = true;\n              }\n            }\n          }\n        }\n      }\n    }\n    let ratio: Float32Array;\n    theCube[x][y][z].clicked\n      ? (ratio = (num - bombs) / spaces)\n      : (ratio = \"n/a\");\n    this.setState({ spaces });\n    this.setState({ ratio });\n    this.setState({ theCube });\n  }\n  mouseOut() {\n    let { theCube } = this.state;\n    theCube = fillCubeFaces(theCube, () => () => false, \"selected\");\n    this.setState({ theCube });\n  }\n  render() {\n    let {\n      state: { theCube, bombsLeft, ratio, spaces, rotateX, rotateY }\n    } = this;\n    let colors = [];\n    for (let i = theCube.length - 1; i >= 0; i--) {\n      colors.push(theCube[i][0][0].color);\n    }\n    return (\n      <div>\n        <div className=\"row mapRow\">\n          {theCube.map((yArr, x) => {\n            return (\n              <table key={x} className={\" table\" + x}>\n                <tbody>\n                  {yArr.map((zArr, y) => {\n                    return (\n                      <tr key={y} className=\"cubeRow\">\n                        {zArr.map((val, z) => {\n                          return (\n                            <CubeCell\n                              mouseOver={this.mouseOver.bind(this)}\n                              mouseOut={this.mouseOut.bind(this)}\n                              click={this.click.bind(this)}\n                              contextMenu={this.contextMenu.bind(this)}\n                              key={z}\n                              x={x}\n                              y={y}\n                              z={z}\n                              val={val.val}\n                              clicked={val.clicked}\n                              color={val.color}\n                              selected={val.selected}\n                              flag={val.flag}\n                            />\n                          );\n                        })}\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            );\n          })}\n        </div>\n        <div className=\"menuDiv\">\n          <Cube colors={colors} rotateX={rotateX} rotateY={rotateY} />\n          <ArrowPad arrowPad={this.arrowPad.bind(this)} />\n          <ScoreBoard bombsLeft={bombsLeft} ratio={ratio} spaces={spaces} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Map3D from \"./containers/map\";\n// import MSInfo from \"./statelessComps/minesweeperInfo\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"App\">\n          <br />\n          <Map3D className=\"map\" />\n          {/* <MSInfo /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}